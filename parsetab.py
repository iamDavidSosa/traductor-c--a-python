
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN CLASS DIVIDE ELSE FLOAT FOR IDENTIFIER IF INT LBRACE LPAREN MAIN MINUS NAMESPACE NUMBER PLUS PUBLIC RBRACE RETURN RPAREN SEMICOLON STATIC STRING TIMES USING VOIDprogram : statementstatement : IDENTIFIER ASSIGN NUMBER SEMICOLON'
    
_lr_action_items = {'IDENTIFIER':([0,],[3,]),'$end':([1,2,6,],[0,-1,-2,]),'ASSIGN':([3,],[4,]),'NUMBER':([4,],[5,]),'SEMICOLON':([5,],[6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','traductor.py',69),
  ('statement -> IDENTIFIER ASSIGN NUMBER SEMICOLON','statement',4,'p_statement_assign','traductor.py',73),
]
